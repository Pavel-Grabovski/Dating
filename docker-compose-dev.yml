# docker compose -f docker-compose-dev.yml -p dating-dev up -d
# docker compose -f docker-compose-dev.yml -p dating-dev down -v

services:
    authentication_db.dev:
        container_name: authentication.db.dev
        image: postgres:latest         
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=12345678
            - POSTGRES_DB=authentication-db-dev
        restart: always
        ports:
            - "1010:5432"
        volumes:
            - postgres_authentication_db:/var/lib/postgresql/data/
        networks:
            - dating-hub-network-dev
            
    dating-authentication-service:
        container_name: dating.authentication.service.dev
        build:
            context: .
            dockerfile: ./dating-authentication-api.dockerfile
            args:
                - BUILDKIT_INLINE_CACHE=0
        ports:
            - "1030:8080"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ConnectionStrings__PostgreSQLConnection=Host=authentication.db.dev;Database=authentication-db-dev;Username=postgres;Password=12345678
        restart: unless-stopped
        networks:
            - dating-hub-network-dev
            
    dating-api-gateway:
        container_name: dating.api.gateway.dev
        build:
            context: .
            dockerfile: ./dating-api-gateway.dockerfile
            args:
                - BUILDKIT_INLINE_CACHE=0
        ports:
            - "1001:8080"
        restart: unless-stopped
        networks:
            - dating-hub-network-dev
            
    profile_events_db:
        container_name: profile.events.db.dev
        image: postgres
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=12345678
            - POSTGRES_DB=profile-events-db
        restart: always
        ports:
            - "2010:5432"
        volumes:
            - postgres_write_db:/var/lib/postgresql/data/
        networks:
            - dating-hub-network-dev

    zookeeper:
        container_name: zookeeper.dev
        image: docker.io/bitnami/zookeeper:3.9.3
        restart: unless-stopped
        ports:
            - "2181:2181"
        volumes:
            - "zookeeper_data:/bitnami"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - dating-hub-network-dev
        
    kafka:
        container_name: kafka.dev
        image: docker.io/bitnami/kafka:3.9.0
        ports:
            - "9092:9092"
        restart: unless-stopped
        volumes:
            - "kafka_data:/bitnami"
        environment:
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper.dev:2181
            - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        depends_on:
            - zookeeper
        networks:
            - dating-hub-network-dev
    
volumes:
  postgres_authentication_db:
    driver: local
  postgres_write_db:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

    
networks:
  dating-hub-network-dev:
    driver: bridge
